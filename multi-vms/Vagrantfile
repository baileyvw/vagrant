# -*- mode: ruby -*-
# vi: set ft=ruby :

# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.
Vagrant.configure("2") do |config|
  # The most common configuration options are documented and commented below.
  # For a complete reference, please see the online documentation at
  # https://docs.vagrantup.com.

  # Every Vagrant development environment requires a box. You can search for
  # boxes at https://atlas.hashicorp.com/search.
  config.vm.box = "bp-shimizukawa/centos-6.5"
  #config.vm.hostname = "git-box-lamp-6.5"
  config.vm.provision "file",
     source: "~/udemy_vagrant-course/vagrant/files/git-config",
  #source: "/Users/ansible/udemy_vagrant-course/vagrant/files/git-config",
     destination: "~/.gitconfig"

  config.vm.provision "shell",
  path: "https://raw.githubusercontent.com/baileyvw/vagrant/master/scripts/centos-common.sh"

  # creating 2 new vm's
  # web vm
  config.vm.define "web" do |web|
     config.vm.network "forwarded_port", guest: 80, host: 8080
     web.vm.network "private_network", ip: "192.168.10.60"
     web.vm.hostname = "web-server"
     web.vm.provision "shell",
  path: "https://raw.githubusercontent.com/baileyvw/vagrant/master/scripts/centos-web.sh"
  end
  # db vm

  config.vm.define "db" do |db|
    db.vm.hostname = "database-server"
   db.vm.network "private_network", ip: "192.168.10.61"
    db.vm.provision "shell",
  path: "https://raw.githubusercontent.com/baileyvw/vagrant/master/scripts/centos-database.sh"
  end
# below provison using a file
  #config.vm.provision "file",
   #  source: "~/udemy_vagrant-course/vagrant/files/git-config",
  #source: "/Users/ansible/udemy_vagrant-course/vagrant/files/git-config",
    # destination: "~/.gitconfig"

# below provison using a shell or you could use shell as in the bottom of this file.
#  config.vm.provision "shell",
#  path: "~/udemy_vagrant-course/vagrant/scripts/provision.sh"
#
  #config.vm.provision "shell",
  #path: "https://raw.githubusercontent.com/baileyvw/vagrant/master/scripts/centos-lamp.sh"

  #path: "~/udemy_vagrant-course/vagrant/scripts/provision.sh"
#    inline: "yum install -y git"
#  config.vm.provision "shell" do |sh|
#    sh.path = "./yum-update.sh"
#  end
  # Disable automatic box update checking. If you disable this, then
  # boxes will only be checked for updates when the user runs
  # `vagrant box outdated`. This is not recommended.
  # config.vm.box_check_update = false

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine. In the example below,
  # accessing "localhost:8080" will access port 80 on the guest machine.
  # config.vm.network "forwarded_port", guest: 80, host: 8080

  # Create a private network, which allows host-only access to the machine
  # using a specific IP.
  # config.vm.network "private_network", ip: "192.168.33.10"

  # Create a public network, which generally matched to bridged network.
  # Bridged networks make the machine appear as another physical device on
  # your network.
  # config.vm.network "public_network"

  # Share an additional folder to the guest VM. The first argument is
  # the path on the host to the actual folder. The second argument is
  # the path on the guest to mount the folder. And the optional third
  # argument is a set of non-required options.
  # config.vm.synced_folder "../data", "/vagrant_data"

  # Provider-specific configuration so you can fine-tune various
  # backing providers for Vagrant. These expose provider-specific options.
  # Example for VirtualBox:
  #
   config.vm.provider "virtualbox" do |vb|
  #   # Display the VirtualBox GUI when booting the machine
  #   vb.gui = true
  #
  #   # Customize the amount of memory on the VM:
     vb.memory = "1024"
     #vb.name = "git-box"
  end
  #
  # View the documentation for the provider you are using for more
  # information on available options.

  # Define a Vagrant Push strategy for pushing to Atlas. Other push strategies
  # such as FTP and Heroku are also available. See the documentation at
  # https://docs.vagrantup.com/v2/push/atlas.html for more information.
  # config.push.define "atlas" do |push|
  #   push.app = "YOUR_ATLAS_USERNAME/YOUR_APPLICATION_NAME"
  # end

  # Enable provisioning with a shell script. Additional provisioners such as
  # Puppet, Chef, Ansible, Salt, and Docker are also available. Please see the
  # documentation for more information about their specific syntax and use.
  # example 1 
  # config.vm.provision "shell", inline: <<-SHELL
  #   apt-get update
  #   apt-get install -y apache2
  # SHELL
  # example 2
#   config.vm.provision "shell", inline: <<-SHELL
#     sudo yum update -y 
  #   sudo yum install -y git unzip screen
  #   sudo yum update -y 
#   SHELL

end
